        -:    0:Source:C:/Users/Tudor/Desktop/Laboratoare/lab-910-tudorsuiu/Domain/Banknote/BanknoteValidator.cpp
        -:    0:Graph:C:\Users\Tudor\Desktop\Laboratoare\lab-910-tudorsuiu\cmake-build-debug-coverage\CMakeFiles\lab_910_tudorsuiu.dir\Domain\Banknote\BanknoteValidator.cpp.gcno
        -:    0:Data:C:\Users\Tudor\Desktop\Laboratoare\lab-910-tudorsuiu\cmake-build-debug-coverage\CMakeFiles\lab_910_tudorsuiu.dir\Domain\Banknote\BanknoteValidator.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by Tudor on 5/9/2022.
        -:    3://
        -:    4:
        -:    5:#include "BanknoteValidator.h"
        -:    6:#include "../MyException.h"
        -:    7:
function _ZN17BanknoteValidator8validateE8Banknote called 12 returned 100% blocks executed 63%
       12:    8:void BanknoteValidator::validate(Banknote banknote) {
       12:    9:    if(banknote.getIndex() <= 0) {
       12:    9-block  0
call    0 returned 12
branch  1 taken 0 (fallthrough)
branch  2 taken 12
    #####:   10:        throw MyException("Banknote ID must be positive.");
    %%%%%:   10-block  0
call    0 never executed
call    1 never executed
call    2 never executed
        -:   11:    }
       21:   12:    else if(banknote.getValue() != 1 && banknote.getValue() != 5 &&
       12:   12-block  0
call    0 returned 12
        9:   12-block  1
call    1 returned 9
branch  2 taken 7 (fallthrough)
branch  3 taken 2
      21*:   13:    banknote.getValue() != 10 && banknote.getValue() != 50 && banknote.getValue() != 100) {
branch  0 taken 9 (fallthrough)
branch  1 taken 3
        7:   13-block  0
call    2 returned 7
branch  3 taken 5 (fallthrough)
branch  4 taken 2
        5:   13-block  1
call    5 returned 5
branch  6 taken 2 (fallthrough)
branch  7 taken 3
        2:   13-block  2
call    8 returned 2
branch  9 taken 0 (fallthrough)
branch 10 taken 2
    %%%%%:   13-block  3
       12:   13-block  4
       12:   13-block  5
branch 11 taken 0 (fallthrough)
branch 12 taken 12
    #####:   14:        throw MyException("This vending machine only accepts banknotes with a value of 1, 5, 10, 50 or 100 RON.");
    %%%%%:   14-block  0
call    0 never executed
call    1 never executed
call    2 never executed
        -:   15:    }
       12:   16:    else if(banknote.getNoOccurrences() < 0) {
       12:   16-block  0
call    0 returned 12
branch  1 taken 0 (fallthrough)
branch  2 taken 12
    #####:   17:        throw MyException("The number of occurrences of a banknote must be positive!");
    %%%%%:   17-block  0
call    0 never executed
call    1 never executed
call    2 never executed
        -:   18:    }
       12:   19:}
